generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model UserData {
  UUID_UD       String          @id @default(uuid())
  Name_UD       String
  Email_UD      String
  Password_UD   String
  Role_UD       Roles
  LoggedAt_UD   DateTime?
  UpdatedAt_UD  DateTime        @default(now())
  CreatedAt_UD  DateTime        @default(now())
  PhotoUrl_UD   String          @db.Text
  OTP_UD        Int?
  WorkspaceData WorkspaceData[]
}

model AppData {
  UUID_AD        String   @id @default(uuid())
  Version_AD     String   @unique
  Description_AD String   @db.Text
  UpdatedAt_AD   DateTime @default(now())
  CreatedAt_AD   DateTime @default(now())
  Url_AD         String   @db.Text
}

model WorkspaceData {
  UUID_WD      String       @id @default(uuid())
  UUID_UD      String
  Name_WD      String
  UpdatedAt_WD DateTime     @default(now())
  CreatedAt_WD DateTime     @default(now())
  ResultData   ResultData[]
  UserData     UserData     @relation(fields: [UUID_UD], references: [UUID_UD], onDelete: NoAction, onUpdate: NoAction)

  @@index([UUID_UD], map: "WorkspaceData_UUID_UD_fkey")
}

model ModelData {
  UUID_MD          String       @id @default(uuid())
  Name_MD          String
  Url_MD           String       @db.Text
  UpdatedAt_MD     DateTime     @default(now())
  CreatedAt_MD     DateTime     @default(now())
  CountDetected_MD Int          @default(0)
  Type_MD          ModelTypes
  ResultData       ResultData[]
}

model ResultData {
  UUID_RD       String         @id @default(uuid())
  UUID_MD       String
  Photo_RD      String         @db.Text
  UUID_RI       String
  UUID_WD       String?
  ModelData     ModelData      @relation(fields: [UUID_MD], references: [UUID_MD], onDelete: NoAction, onUpdate: NoAction)
  ResultIndex   ResultIndex    @relation(fields: [UUID_RI], references: [UUID_RI], onDelete: NoAction, onUpdate: NoAction)
  WorkspaceData WorkspaceData? @relation(fields: [UUID_WD], references: [UUID_WD], onDelete: NoAction, onUpdate: NoAction)

  @@index([UUID_MD], map: "ResultData_UUID_MD_fkey")
  @@index([UUID_RI], map: "ResultData_UUID_RI_fkey")
  @@index([UUID_WD], map: "ResultData_UUID_WD_fkey")
}

model ResultIndex {
  UUID_RI                String                  @id @default(uuid())
  UUID_SORI              String?
  UUID_PRI               String?
  UUID_TRI               String?
  UUID_GRI               String?
  Title_RI               String                  @unique
  CreatedAt_RI           DateTime                @default(now())
  UpdatedAt_RI           DateTime                @default(now())
  ResultData             ResultData[]
  GelombangResultIndex   GelombangResultIndex?   @relation(fields: [UUID_GRI], references: [UUID_GRI], onDelete: NoAction, onUpdate: NoAction)
  PalmResultIndex        PalmResultIndex?        @relation(fields: [UUID_PRI], references: [UUID_PRI], onDelete: NoAction, onUpdate: NoAction)
  SoilResultIndex        SoilResultIndex?        @relation(fields: [UUID_SORI], references: [UUID_SORI], onDelete: NoAction, onUpdate: NoAction)
  TransmittanResultIndex TransmittanResultIndex? @relation(fields: [UUID_TRI], references: [UUID_TRI], onDelete: NoAction, onUpdate: NoAction)
  SocialResultIndex      SocialResultIndex[]

  @@index([UUID_GRI], map: "ResultIndex_UUID_GRI_fkey")
  @@index([UUID_PRI], map: "ResultIndex_UUID_PRI_fkey")
  @@index([UUID_SORI], map: "ResultIndex_UUID_SORI_fkey")
  @@index([UUID_TRI], map: "ResultIndex_UUID_TRI_fkey")
}

model SocialResultIndex {
  UUID_SRI      String       @id @default(uuid())
  Longitude_SRI Float
  Latitude_SRI  Float
  Kabupaten_SRI String
  Kecamatan_SRI String
  Umur_SRI      String
  UUID_RI       String?
  ResultIndex   ResultIndex? @relation(fields: [UUID_RI], references: [UUID_RI], onDelete: NoAction, onUpdate: NoAction)

  @@index([UUID_RI], map: "SocialResultIndex_UUID_RI_fkey")
}

model SoilResultIndex {
  UUID_SORI        String        @id @default(uuid())
  Lereng_SORI      String?
  Drainase_SORI    String?
  Topografi_SORI   String?
  BahayaErosi_SORI String?
  BatuanPer_SORI   String?
  BatuanSin_SORI   String?
  Ketinggian_SORI  String?
  Genangan_SORI    String?
  ResultIndex      ResultIndex[]
}

model PalmResultIndex {
  UUID_PRI     String        @id @default(uuid())
  ALB_PRI      Float
  Rendemen_PRI Float
  Densitas_PRI Float
  Sampel_PRI   String
  ResultIndex  ResultIndex[]
}

model TransmittanResultIndex {
  UUID_TRI    String        @id @default(uuid())
  Min_TRI     Float
  Max_TRI     Float
  ResultIndex ResultIndex[]
}

model GelombangResultIndex {
  UUID_GRI    String        @id @default(uuid())
  Max_GRI     Float
  Min_GRI     Float
  ResultIndex ResultIndex[]
}

enum Roles {
  USER
  ADMIN
  SUPERADMIN
}

enum ModelTypes {
  SCAN_TEST
  LAB_TEST
}
